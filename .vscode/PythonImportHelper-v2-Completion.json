[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "book_api.migrations.0001_initial",
        "description": "book_api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Author',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('full_name', models.CharField(max_length=255, verbose_name='Muallif nomi')),",
        "detail": "book_api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "book_api.migrations.0002_remove_audiobook_file_link_and_more",
        "description": "book_api.migrations.0002_remove_audiobook_file_link_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('book_api', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='audiobook',\n            name='file_link',\n        ),\n        migrations.RemoveField(",
        "detail": "book_api.migrations.0002_remove_audiobook_file_link_and_more",
        "documentation": {}
    },
    {
        "label": "AuthorAdmin",
        "kind": 6,
        "importPath": "book_api.admin",
        "description": "book_api.admin",
        "peekOfCode": "class AuthorAdmin(admin.ModelAdmin):\n    list_display = ('full_name', 'status')\n    list_filter = ('status',)\n    list_editable = ('status',)\n@admin.register(FileBook)\nclass BookAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'status', 'file_link', 'file_size')\n    list_filter = ('status', 'created_at')\n    list_editable = ('status', 'file_link')\n@admin.register(AudioBook)",
        "detail": "book_api.admin",
        "documentation": {}
    },
    {
        "label": "BookAdmin",
        "kind": 6,
        "importPath": "book_api.admin",
        "description": "book_api.admin",
        "peekOfCode": "class BookAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'status', 'file_link', 'file_size')\n    list_filter = ('status', 'created_at')\n    list_editable = ('status', 'file_link')\n@admin.register(AudioBook)\nclass BookAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'status', 'audio_link', 'audio_size')\n    list_filter = ('status', 'created_at')\n    list_editable = ('status', 'audio_link')",
        "detail": "book_api.admin",
        "documentation": {}
    },
    {
        "label": "BookAdmin",
        "kind": 6,
        "importPath": "book_api.admin",
        "description": "book_api.admin",
        "peekOfCode": "class BookAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'status', 'audio_link', 'audio_size')\n    list_filter = ('status', 'created_at')\n    list_editable = ('status', 'audio_link')",
        "detail": "book_api.admin",
        "documentation": {}
    },
    {
        "label": "BookApiConfig",
        "kind": 6,
        "importPath": "book_api.apps",
        "description": "book_api.apps",
        "peekOfCode": "class BookApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'book_api'",
        "detail": "book_api.apps",
        "documentation": {}
    },
    {
        "label": "Author",
        "kind": 6,
        "importPath": "book_api.models",
        "description": "book_api.models",
        "peekOfCode": "class Author(models.Model):\n    full_name = models.CharField(max_length=255, verbose_name=\"Muallif nomi\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        verbose_name = \"Muallif\"\n        verbose_name_plural = \"Mualliflar\"\n        ordering = [\"-created_at\"]\n    def __strt__(self):\n        return self.full_name",
        "detail": "book_api.models",
        "documentation": {}
    },
    {
        "label": "FileBook",
        "kind": 6,
        "importPath": "book_api.models",
        "description": "book_api.models",
        "peekOfCode": "class FileBook(models.Model):\n    name = models.CharField(max_length=255, verbose_name=\"Kitob nomi\")\n    author = models.ForeignKey(Author, on_delete=models.CASCADE, null=True, blank=True, related_name='file_book_author')\n    type = models.CharField(max_length=30, verbose_name=\"Kitob formati\")\n    category = models.CharField(max_length=255, verbose_name=\"Kitob yo'nalishi\")\n    photo = models.ImageField(upload_to='Books_photo/%Y/%m/%d', blank=True, null=True, verbose_name=\"Kitob Rasmi\")\n    file_link = models.CharField(max_length=255, verbose_name=\"Kitob file linki\", blank=True, null=True)\n    channel_name = models.CharField(max_length=255, verbose_name=\"Kanal nomi\")\n    file_size = models.CharField(max_length=255, verbose_name=\"Fayl hajmi\", null=True, blank=True)\n    download_count = models.PositiveIntegerField(default=0, verbose_name=\"Yuklab olishlar soni\")",
        "detail": "book_api.models",
        "documentation": {}
    },
    {
        "label": "AudioBook",
        "kind": 6,
        "importPath": "book_api.models",
        "description": "book_api.models",
        "peekOfCode": "class AudioBook(models.Model):\n    name = models.CharField(max_length=255, verbose_name=\"Kitob nomi\")\n    author = models.ForeignKey(Author, on_delete=models.CASCADE, null=True, blank=True, related_name='audio_book_author')\n    type = models.CharField(max_length=30, verbose_name=\"Kitob formati\")\n    category = models.CharField(max_length=255, verbose_name=\"Kitob yo'nalishi\")\n    photo = models.ImageField(upload_to='Books_photo/%Y/%m/%d', blank=True, null=True, verbose_name=\"Kitob Rasmi\")\n    audio_link = models.CharField(max_length=255, verbose_name=\"Kitob audio linki\", blank=True, null=True)\n    channel_name = models.CharField(max_length=255, verbose_name=\"Kanal nomi\")\n    audio_size = models.CharField(max_length=255, verbose_name=\"Audio hajmi\")\n    download_count = models.PositiveIntegerField(default=0, verbose_name=\"Yuklab olishlar soni\")",
        "detail": "book_api.models",
        "documentation": {}
    },
    {
        "label": "FileBookSerializer",
        "kind": 6,
        "importPath": "book_api.serializers",
        "description": "book_api.serializers",
        "peekOfCode": "class FileBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FileBook\n        fields = ('__all__')\nclass AudioBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AudioBook\n        fields = ('__all__')\nclass AuthorSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "book_api.serializers",
        "documentation": {}
    },
    {
        "label": "AudioBookSerializer",
        "kind": 6,
        "importPath": "book_api.serializers",
        "description": "book_api.serializers",
        "peekOfCode": "class AudioBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AudioBook\n        fields = ('__all__')\nclass AuthorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = ('__all__')",
        "detail": "book_api.serializers",
        "documentation": {}
    },
    {
        "label": "AuthorSerializer",
        "kind": 6,
        "importPath": "book_api.serializers",
        "description": "book_api.serializers",
        "peekOfCode": "class AuthorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = ('__all__')",
        "detail": "book_api.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "book_api.urls",
        "description": "book_api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('file-book-api', FileBookViewset)\nrouter.register('audio-book-api', AudioBookViewset)\nrouter.register('author-api', AuthorViewset)\nurlpatterns = [\n    path('', include(router.urls))\n]",
        "detail": "book_api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "book_api.urls",
        "description": "book_api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls))\n]",
        "detail": "book_api.urls",
        "documentation": {}
    },
    {
        "label": "AuthorViewset",
        "kind": 6,
        "importPath": "book_api.views",
        "description": "book_api.views",
        "peekOfCode": "class AuthorViewset(viewsets.ModelViewSet):\n    queryset = Author.objects.all()\n    serializer_class = AuthorSerializer\n    permission_classes = [AllowAny]\nclass FileBookViewset(viewsets.ModelViewSet):\n    queryset = FileBook.objects.all()\n    serializer_class = FileBookSerializer\n    permission_classes = [AllowAny]\nclass AudioBookViewset(viewsets.ModelViewSet):\n    queryset = AudioBook.objects.all()",
        "detail": "book_api.views",
        "documentation": {}
    },
    {
        "label": "FileBookViewset",
        "kind": 6,
        "importPath": "book_api.views",
        "description": "book_api.views",
        "peekOfCode": "class FileBookViewset(viewsets.ModelViewSet):\n    queryset = FileBook.objects.all()\n    serializer_class = FileBookSerializer\n    permission_classes = [AllowAny]\nclass AudioBookViewset(viewsets.ModelViewSet):\n    queryset = AudioBook.objects.all()\n    serializer_class = AudioBookSerializer\n    permission_classes = [AllowAny]",
        "detail": "book_api.views",
        "documentation": {}
    },
    {
        "label": "AudioBookViewset",
        "kind": 6,
        "importPath": "book_api.views",
        "description": "book_api.views",
        "peekOfCode": "class AudioBookViewset(viewsets.ModelViewSet):\n    queryset = AudioBook.objects.all()\n    serializer_class = AudioBookSerializer\n    permission_classes = [AllowAny]",
        "detail": "book_api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-1t9jkssvj_54(()vf7n=%kn@l$*9_!m-3mab0eh8v_$g5)pj+^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-1t9jkssvj_54(()vf7n=%kn@l$*9_!m-3mab0eh8v_$g5)pj+^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # globals ",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # globals \n    'rest_framework',\n    #local",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'config.urls'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ROOT_URLCONF = 'config.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WSGI_APPLICATION = 'config.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'book_api',\n        'USER': 'postgres',\n        'PASSWORD': 'obidcan124578',\n        'HOST': 'localhost',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'book_api',\n        'USER': 'postgres',\n        'PASSWORD': 'obidcan124578',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('book_api.urls'))\n]",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "lent",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "lent = 0\nwith open(r\"C:\\Users\\User\\Desktop\\telegram-channel scrap data\\telegram-tracker\\output\\data\\msgs_dataset.csv\", newline='', encoding=\"utf8\") as csvfile:\n    spamreader = csv.reader(csvfile, delimiter=',', quotechar='|')\n    reader = csv.DictReader(csvfile)\n    for row in reader:\n        # if row['document_type'] == 'application/pdf':\n        #     pass\n            # lent.append(row['document_type'])\n        # if row['document_type'] == 'image/vnd.djvu':\n        #     print(row)",
        "detail": "test",
        "documentation": {}
    }
]